/**
 * Automatically generated by Zserio C++ extension version 2.0.0-pre1.
 */

#include <zserio/StringConvertUtil.h>
#include <zserio/CppRuntimeException.h>
#include <zserio/HashCodeUtil.h>
#include <zserio/BitPositionUtil.h>
#include <zserio/BitSizeOfCalculator.h>
#include <zserio/BitFieldUtil.h>

#include <pmr_poc/StringStruct.h>

namespace pmr_poc
{

StringStruct::StringStruct(::zserio::BitStreamReader& in,
        const ::zserio::pmr::PolymorphicAllocator<void>& allocator) :
        m_stringField_(readStringField(in, allocator))
{
}

const ::zserio::pmr::string& StringStruct::getStringField() const
{
    return m_stringField_;
}

size_t StringStruct::bitSizeOf(size_t bitPosition) const
{
    size_t endBitPosition = bitPosition;

    endBitPosition += ::zserio::bitSizeOfString(m_stringField_);

    return endBitPosition - bitPosition;
}

bool StringStruct::operator==(const StringStruct& other) const
{
    if (this != &other)
    {
        return
                (m_stringField_ == other.m_stringField_);
    }

    return true;
}

int StringStruct::hashCode() const
{
    int result = ::zserio::HASH_SEED;

    result = ::zserio::calcHashCode(result, m_stringField_);

    return result;
}

::zserio::pmr::string StringStruct::readStringField(::zserio::BitStreamReader& in,
        const ::zserio::pmr::PolymorphicAllocator<void>& allocator)
{
    return in.readString(allocator);
}

} // namespace pmr_poc
