/**
 * Automatically generated by Zserio C++ extension version 2.0.0-pre1.
 */

#ifndef PMR_POC_CHILD_STRUCT_H
#define PMR_POC_CHILD_STRUCT_H

#include <zserio/BitStreamReader.h>
#include <zserio/BitStreamWriter.h>
#include <zserio/PreWriteAction.h>
#include <zserio/pmr/Vector.h>
#include <zserio/pmr/String.h>
#include <zserio/pmr/BitBuffer.h>
#include <zserio/Arrays.h>
#include <zserio/Types.h>

namespace pmr_poc
{

class ChildStruct
{
public:
    explicit ChildStruct(::zserio::BitStreamReader& in,
            const ::zserio::pmr::PolymorphicAllocator<void>& allocator =
                    ::zserio::pmr::PolymorphicAllocator<void>());

    ~ChildStruct() = default;

    ChildStruct(const ChildStruct&) = default;
    ChildStruct& operator=(const ChildStruct&) = default;

    ChildStruct(ChildStruct&&) = default;
    ChildStruct& operator=(ChildStruct&&) = default;

    const ::zserio::pmr::vector<uint16_t>& getUint16Array() const;

    const ::zserio::pmr::vector<::zserio::pmr::string>& getStringArray() const;

    const ::zserio::pmr::vector<::zserio::pmr::BitBuffer>& getExternArray() const;

    size_t bitSizeOf(size_t bitPosition = 0) const;

    bool operator==(const ChildStruct& other) const;
    int hashCode() const;

private:
    ::zserio::pmr::vector<uint16_t> readUint16Array(::zserio::BitStreamReader& in,
            const ::zserio::pmr::PolymorphicAllocator<void>& alloc);
    ::zserio::pmr::vector<::zserio::pmr::string> readStringArray(::zserio::BitStreamReader& in,
            const ::zserio::pmr::PolymorphicAllocator<void>& alloc);
    ::zserio::pmr::vector<::zserio::pmr::BitBuffer> readExternArray(::zserio::BitStreamReader& in,
            const ::zserio::pmr::PolymorphicAllocator<void>& alloc);

    ::zserio::pmr::vector<uint16_t> m_uint16Array_;
    ::zserio::pmr::vector<::zserio::pmr::string> m_stringArray_;
    ::zserio::pmr::vector<::zserio::pmr::BitBuffer> m_externArray_;
};

} // namespace pmr_poc

#endif // PMR_POC_CHILD_STRUCT_H
